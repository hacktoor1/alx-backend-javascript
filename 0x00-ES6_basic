{"payload":{"allShortcutsEnabled":false,"path":"0x00-ES6_basic","repo":{"id":628892950,"defaultBranch":"master","name":"alx-backend-javascript","ownerLogin":"Dr-MarcusI","currentUserCanPush":false,"isFork":false,"isEmpty":false,"createdAt":"2023-04-17T07:44:19.000Z","ownerAvatar":"https://avatars.githubusercontent.com/u/106748811?v=4","public":true,"private":false,"isOrgOwned":false},"currentUser":null,"refInfo":{"name":"master","listCacheKey":"v0:1681719676.0","canEdit":false,"refType":"branch","currentOid":"368101fe0f959fd00cb3a644f7c33af382b1f441"},"tree":{"items":[{"name":".eslintrc.js","path":"0x00-ES6_basic/.eslintrc.js","contentType":"file"},{"name":".gitignore","path":"0x00-ES6_basic/.gitignore","contentType":"file"},{"name":"0-constants.js","path":"0x00-ES6_basic/0-constants.js","contentType":"file"},{"name":"1-block-scoped.js","path":"0x00-ES6_basic/1-block-scoped.js","contentType":"file"},{"name":"10-loops.js","path":"0x00-ES6_basic/10-loops.js","contentType":"file"},{"name":"100-createIteratorObject.js","path":"0x00-ES6_basic/100-createIteratorObject.js","contentType":"file"},{"name":"101-iterateThroughObject.js","path":"0x00-ES6_basic/101-iterateThroughObject.js","contentType":"file"},{"name":"11-createEmployeesObject.js","path":"0x00-ES6_basic/11-createEmployeesObject.js","contentType":"file"},{"name":"12-createReportObject.js","path":"0x00-ES6_basic/12-createReportObject.js","contentType":"file"},{"name":"2-arrow.js","path":"0x00-ES6_basic/2-arrow.js","contentType":"file"},{"name":"3-default-parameter.js","path":"0x00-ES6_basic/3-default-parameter.js","contentType":"file"},{"name":"4-rest-parameter.js","path":"0x00-ES6_basic/4-rest-parameter.js","contentType":"file"},{"name":"5-spread-operator.js","path":"0x00-ES6_basic/5-spread-operator.js","contentType":"file"},{"name":"6-string-interpolation.js","path":"0x00-ES6_basic/6-string-interpolation.js","contentType":"file"},{"name":"8-getBudgetCurrentYear.js","path":"0x00-ES6_basic/8-getBudgetCurrentYear.js","contentType":"file"},{"name":"9-getFullBudget.js","path":"0x00-ES6_basic/9-getFullBudget.js","contentType":"file"},{"name":"README.md","path":"0x00-ES6_basic/README.md","contentType":"file"}],"templateDirectorySuggestionUrl":null,"readme":{"displayName":"README.md","richText":"<article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><div class=\"markdown-heading\" dir=\"auto\"><h1 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">0x00. ES6 Basics</h1><a id=\"user-content-0x00-es6-basics\" class=\"anchor\" aria-label=\"Permalink: 0x00. ES6 Basics\" href=\"#0x00-es6-basics\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<p dir=\"auto\"><strong>Learning Objectives</strong></p>\n<p dir=\"auto\">-What ES6 is\n-New features introduced in ES6\n-The difference between a constant and a variable\n-Block-scoped variables\n-Arrow functions and function parameters default to them\n-Rest and spread function parameters\n-String templating in ES6\n-Object creation and their properties in ES6\n-Iterators and for-of loops</p>\n<div class=\"markdown-heading\" dir=\"auto\"><h2 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Tasks</h2><a id=\"user-content-tasks\" class=\"anchor\" aria-label=\"Permalink: Tasks\" href=\"#tasks\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<ul dir=\"auto\">\n<li><a href=\"/Dr-MarcusI/alx-backend-javascript/blob/master/0x00-ES6_basic/0-constants.js\">0-constants.js</a>:Modify</li>\n</ul>\n<p dir=\"auto\">function taskFirst to instantiate variables using const\nfunction taskNext to instantiate variables using let</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```\nexport function taskFirst() {\n  var task = 'I prefer const when I can.';\n  return task;\n}\n\nexport function getLast() {\n  return ' is okay';\n}\n\nexport function taskNext() {\n  var combination = 'But sometimes let';\n  combination += getLast();\n\n  return combination;\n}\nExecution example:\n\nbob@dylan:~$ cat 0-main.js\nimport { taskFirst, taskNext } from './0-constants.js';\n\nconsole.log(`${taskFirst()} ${taskNext()}`);\n\nbob@dylan:~$ \nbob@dylan:~$ npm run dev 0-main.js \nI prefer const when I can. But sometimes let is okay\nbob@dylan:~$ \n```\"><pre class=\"notranslate\"><code>```\nexport function taskFirst() {\n  var task = 'I prefer const when I can.';\n  return task;\n}\n\nexport function getLast() {\n  return ' is okay';\n}\n\nexport function taskNext() {\n  var combination = 'But sometimes let';\n  combination += getLast();\n\n  return combination;\n}\nExecution example:\n\nbob@dylan:~$ cat 0-main.js\nimport { taskFirst, taskNext } from './0-constants.js';\n\nconsole.log(`${taskFirst()} ${taskNext()}`);\n\nbob@dylan:~$ \nbob@dylan:~$ npm run dev 0-main.js \nI prefer const when I can. But sometimes let is okay\nbob@dylan:~$ \n```\n</code></pre></div>\n<ul dir=\"auto\">\n<li><a href=\"/Dr-MarcusI/alx-backend-javascript/blob/master/0x00-ES6_basic/1-block-scoped.js\">1-block-scoped.js</a>:Given what you’ve read about var and hoisting, modify the variables inside the function taskBlock so that the variables aren’t overwritten inside the conditional block.</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```\nexport default function taskBlock(trueOrFalse) {\n  var task = false;\n  var task2 = true;\n\n  if (trueOrFalse) {\n    var task = true;\n    var task2 = false;\n  }\n\n  return [task, task2];\n}\nExecution:\n\nbob@dylan:~$ cat 1-main.js\nimport taskBlock from './1-block-scoped.js';\n\nconsole.log(taskBlock(true));\nconsole.log(taskBlock(false));\nbob@dylan:~$\nbob@dylan:~$ npm run dev 1-main.js \n[ false, true ]\n[ false, true ]\nbob@dylan:~$\n```\"><pre class=\"notranslate\"><code>```\nexport default function taskBlock(trueOrFalse) {\n  var task = false;\n  var task2 = true;\n\n  if (trueOrFalse) {\n    var task = true;\n    var task2 = false;\n  }\n\n  return [task, task2];\n}\nExecution:\n\nbob@dylan:~$ cat 1-main.js\nimport taskBlock from './1-block-scoped.js';\n\nconsole.log(taskBlock(true));\nconsole.log(taskBlock(false));\nbob@dylan:~$\nbob@dylan:~$ npm run dev 1-main.js \n[ false, true ]\n[ false, true ]\nbob@dylan:~$\n```\n</code></pre></div>\n<ul dir=\"auto\">\n<li><a href=\"/Dr-MarcusI/alx-backend-javascript/blob/master/0x00-ES6_basic/2-arrow.js\">2-arrow.js</a>:Rewrite the following standard function to use ES6’s arrow syntax of the function add (it will be an anonymous function after)</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```\nexport default function getNeighborhoodsList() {\n  this.sanFranciscoNeighborhoods = ['SOMA', 'Union Square'];\n\n  const self = this;\n  this.addNeighborhood = function add(newNeighborhood) {\n    self.sanFranciscoNeighborhoods.push(newNeighborhood);\n    return self.sanFranciscoNeighborhoods;\n  };\n}\nExecution:\n\nbob@dylan:~$ cat 2-main.js\nimport getNeighborhoodsList from './2-arrow.js';\n\nconst neighborhoodsList = new getNeighborhoodsList();\nconst res = neighborhoodsList.addNeighborhood('Noe Valley');\nconsole.log(res);\nbob@dylan:~$\nbob@dylan:~$ npm run dev 2-main.js \n[ 'SOMA', 'Union Square', 'Noe Valley' ]\nbob@dylan:~$\n```\"><pre class=\"notranslate\"><code>```\nexport default function getNeighborhoodsList() {\n  this.sanFranciscoNeighborhoods = ['SOMA', 'Union Square'];\n\n  const self = this;\n  this.addNeighborhood = function add(newNeighborhood) {\n    self.sanFranciscoNeighborhoods.push(newNeighborhood);\n    return self.sanFranciscoNeighborhoods;\n  };\n}\nExecution:\n\nbob@dylan:~$ cat 2-main.js\nimport getNeighborhoodsList from './2-arrow.js';\n\nconst neighborhoodsList = new getNeighborhoodsList();\nconst res = neighborhoodsList.addNeighborhood('Noe Valley');\nconsole.log(res);\nbob@dylan:~$\nbob@dylan:~$ npm run dev 2-main.js \n[ 'SOMA', 'Union Square', 'Noe Valley' ]\nbob@dylan:~$\n```\n</code></pre></div>\n<ul dir=\"auto\">\n<li><a href=\"/Dr-MarcusI/alx-backend-javascript/blob/master/0x00-ES6_basic/3-default-parameter.js\">3-default-parameter.js</a>:Condense the internals of the following function to 1 line - without changing the name of each function/variable.</li>\n</ul>\n<p dir=\"auto\">Hint: The key here to define default parameter values for the function parameters.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```\nexport default function getSumOfHoods(initialNumber, expansion1989, expansion2019) {\n  if (expansion1989 === undefined) {\n    expansion1989 = 89;\n  }\n\n  if (expansion2019 === undefined) {\n    expansion2019 = 19;\n  }\n  return initialNumber + expansion1989 + expansion2019;\n}\nExecution:\n\nbob@dylan:~$ cat 3-main.js\nimport getSumOfHoods from './3-default-parameter.js';\n\nconsole.log(getSumOfHoods(34));\nconsole.log(getSumOfHoods(34, 3));\nconsole.log(getSumOfHoods(34, 3, 4));\nbob@dylan:~$\nbob@dylan:~$ npm run dev 3-main.js \n142\n56\n41\nbob@dylan:~$\n```\"><pre class=\"notranslate\"><code>```\nexport default function getSumOfHoods(initialNumber, expansion1989, expansion2019) {\n  if (expansion1989 === undefined) {\n    expansion1989 = 89;\n  }\n\n  if (expansion2019 === undefined) {\n    expansion2019 = 19;\n  }\n  return initialNumber + expansion1989 + expansion2019;\n}\nExecution:\n\nbob@dylan:~$ cat 3-main.js\nimport getSumOfHoods from './3-default-parameter.js';\n\nconsole.log(getSumOfHoods(34));\nconsole.log(getSumOfHoods(34, 3));\nconsole.log(getSumOfHoods(34, 3, 4));\nbob@dylan:~$\nbob@dylan:~$ npm run dev 3-main.js \n142\n56\n41\nbob@dylan:~$\n```\n</code></pre></div>\n<ul dir=\"auto\">\n<li><a href=\"/Dr-MarcusI/alx-backend-javascript/blob/master/0x00-ES6_basic/4-rest-parameter.js\">4-rest-parameter.js</a>:Modify the following function to return the number of arguments passed to it using the rest parameter syntax</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```\nexport default function returnHowManyArguments() {\n\n}\nExample:\n\n&gt; returnHowManyArguments(&quot;Hello&quot;, &quot;Holberton&quot;, 2020);\n3\n&gt;\nExecution:\n\nbob@dylan:~$ cat 4-main.js\nimport returnHowManyArguments from './4-rest-parameter.js';\n\nconsole.log(returnHowManyArguments(&quot;one&quot;));\nconsole.log(returnHowManyArguments(&quot;one&quot;, &quot;two&quot;, 3, &quot;4th&quot;));\nbob@dylan:~$\nbob@dylan:~$ npm run dev 4-main.js \n1\n4\nbob@dylan:~$\n```\"><pre class=\"notranslate\"><code>```\nexport default function returnHowManyArguments() {\n\n}\nExample:\n\n&gt; returnHowManyArguments(\"Hello\", \"Holberton\", 2020);\n3\n&gt;\nExecution:\n\nbob@dylan:~$ cat 4-main.js\nimport returnHowManyArguments from './4-rest-parameter.js';\n\nconsole.log(returnHowManyArguments(\"one\"));\nconsole.log(returnHowManyArguments(\"one\", \"two\", 3, \"4th\"));\nbob@dylan:~$\nbob@dylan:~$ npm run dev 4-main.js \n1\n4\nbob@dylan:~$\n```\n</code></pre></div>\n<ul dir=\"auto\">\n<li><a href=\"/Dr-MarcusI/alx-backend-javascript/blob/master/0x00-ES6_basic/5-spread-operator.js\">5-spread-operator.js</a>:Using spread syntax, concatenate 2 arrays and each character of a string by modifying the function below. Your function body should be one line long.</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```\nexport default function concatArrays(array1, array2, string) {\n}\nExecution:\n\nbob@dylan:~$ cat 5-main.js\nimport concatArrays from './5-spread-operator.js';\n\nconsole.log(concatArrays(['a', 'b'], ['c', 'd'], 'Hello'));\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 5-main.js \n[\n  'a', 'b', 'c',\n  'd', 'H', 'e',\n  'l', 'l', 'o'\n]\nbob@dylan:~$\n```\"><pre class=\"notranslate\"><code>```\nexport default function concatArrays(array1, array2, string) {\n}\nExecution:\n\nbob@dylan:~$ cat 5-main.js\nimport concatArrays from './5-spread-operator.js';\n\nconsole.log(concatArrays(['a', 'b'], ['c', 'd'], 'Hello'));\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 5-main.js \n[\n  'a', 'b', 'c',\n  'd', 'H', 'e',\n  'l', 'l', 'o'\n]\nbob@dylan:~$\n```\n</code></pre></div>\n<ul dir=\"auto\">\n<li><a href=\"/Dr-MarcusI/alx-backend-javascript/blob/master/0x00-ES6_basic/6-string-interpolation.js\">6-string-interpolation.js</a>:Rewrite the return statement to use a template literal so you can the substitute the variables you’ve defined.</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```export default function getSanFranciscoDescription() {\n  const year = 2017;\n  const budget = {\n    income: '$119,868',\n    gdp: '$154.2 billion',\n    capita: '$178,479',\n  };\n\n  return 'As of ' + year + ', it was the seventh-highest income county in the United States'\n        / ', with a per capita personal income of ' + budget.income + '. As of 2015, San Francisco'\n        / ' proper had a GDP of ' + budget.gdp + ', and a GDP per capita of ' + budget.capita + '.';\n}\nExecution:\n\nbob@dylan:~$ cat 6-main.js\nimport getSanFranciscoDescription from './6-string-interpolation.js';\n\nconsole.log(getSanFranciscoDescription());\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 6-main.js \nAs of 2017, it was the seventh-highest income county in the United States, with a per capita personal income of $119,868. As of 2015, San Francisco proper had a GDP of $154.2 billion, and a GDP per capita of $178,479.\nbob@dylan:~$\n```\"><pre class=\"notranslate\"><code>```export default function getSanFranciscoDescription() {\n  const year = 2017;\n  const budget = {\n    income: '$119,868',\n    gdp: '$154.2 billion',\n    capita: '$178,479',\n  };\n\n  return 'As of ' + year + ', it was the seventh-highest income county in the United States'\n        / ', with a per capita personal income of ' + budget.income + '. As of 2015, San Francisco'\n        / ' proper had a GDP of ' + budget.gdp + ', and a GDP per capita of ' + budget.capita + '.';\n}\nExecution:\n\nbob@dylan:~$ cat 6-main.js\nimport getSanFranciscoDescription from './6-string-interpolation.js';\n\nconsole.log(getSanFranciscoDescription());\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 6-main.js \nAs of 2017, it was the seventh-highest income county in the United States, with a per capita personal income of $119,868. As of 2015, San Francisco proper had a GDP of $154.2 billion, and a GDP per capita of $178,479.\nbob@dylan:~$\n```\n</code></pre></div>\n<ul dir=\"auto\">\n<li><a href=\"/Dr-MarcusI/alx-backend-javascript/blob/master/0x00-ES6_basic/7-getBudgetObject.js\">7-getBudgetObject.js</a>:Notice how the keys and the variable names are the same?</li>\n</ul>\n<p dir=\"auto\">Modify the following function’s budget object to simply use the keyname instead.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```\nexport default function getBudgetObject(income, gdp, capita) {\n  const budget = {\n    income: income,\n    gdp: gdp,\n    capita: capita,\n  };\n\n  return budget;\n}\nExecution:\n\nbob@dylan:~$ cat 7-main.js\nimport getBudgetObject from './7-getBudgetObject.js';\n\nconsole.log(getBudgetObject(400, 700, 900));\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 7-main.js \n{ income: 400, gdp: 700, capita: 900 }\nbob@dylan:~$\n```\"><pre class=\"notranslate\"><code>```\nexport default function getBudgetObject(income, gdp, capita) {\n  const budget = {\n    income: income,\n    gdp: gdp,\n    capita: capita,\n  };\n\n  return budget;\n}\nExecution:\n\nbob@dylan:~$ cat 7-main.js\nimport getBudgetObject from './7-getBudgetObject.js';\n\nconsole.log(getBudgetObject(400, 700, 900));\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 7-main.js \n{ income: 400, gdp: 700, capita: 900 }\nbob@dylan:~$\n```\n</code></pre></div>\n<ul dir=\"auto\">\n<li><a href=\"/Dr-MarcusI/alx-backend-javascript/blob/master/0x00-ES6_basic/8-getBudgetCurrentYear.js\">8-getBudgetCurrentYear.js</a>:Rewrite the getBudgetForCurrentYear function to use ES6 computed property names on the budget object</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```\nfunction getCurrentYear() {\n  const date = new Date();\n  return date.getFullYear();\n}\n\nexport default function getBudgetForCurrentYear(income, gdp, capita) {\n  const budget = {};\n\n  budget[`income-${getCurrentYear()}`] = income;\n  budget[`gdp-${getCurrentYear()}`] = gdp;\n  budget[`capita-${getCurrentYear()}`] = capita;\n\n  return budget;\n}\nExecution:\n\nbob@dylan:~$ cat 8-main.js\nimport getBudgetForCurrentYear from './8-getBudgetCurrentYear.js';\n\nconsole.log(getBudgetForCurrentYear(2100, 5200, 1090));\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 8-main.js \n{ 'income-2021': 2100, 'gdp-2021': 5200, 'capita-2021': 1090 }\nbob@dylan:~$\n```\"><pre class=\"notranslate\"><code>```\nfunction getCurrentYear() {\n  const date = new Date();\n  return date.getFullYear();\n}\n\nexport default function getBudgetForCurrentYear(income, gdp, capita) {\n  const budget = {};\n\n  budget[`income-${getCurrentYear()}`] = income;\n  budget[`gdp-${getCurrentYear()}`] = gdp;\n  budget[`capita-${getCurrentYear()}`] = capita;\n\n  return budget;\n}\nExecution:\n\nbob@dylan:~$ cat 8-main.js\nimport getBudgetForCurrentYear from './8-getBudgetCurrentYear.js';\n\nconsole.log(getBudgetForCurrentYear(2100, 5200, 1090));\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 8-main.js \n{ 'income-2021': 2100, 'gdp-2021': 5200, 'capita-2021': 1090 }\nbob@dylan:~$\n```\n</code></pre></div>\n<ul dir=\"auto\">\n<li><a href=\"/Dr-MarcusI/alx-backend-javascript/blob/master/0x00-ES6_basic/9-getFullBudget.js\">9-getFullBudget.js</a>:Rewrite getFullBudgetObject to use ES6 method properties in the fullBudget object</li>\n</ul>\n<p dir=\"auto\">import getBudgetObject from './7-getBudgetObject.js';</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```\nexport default function getFullBudgetObject(income, gdp, capita) {\n  const budget = getBudgetObject(income, gdp, capita);\n  const fullBudget = {\n    ...budget,\n    getIncomeInDollars: function (income) {\n      return `$${income}`;\n    },\n    getIncomeInEuros: function (income) {\n      return `${income} euros`;\n    },\n  };\n\n  return fullBudget;\n}\nExecution:\n\nbob@dylan:~$ cat 9-main.js\nimport getFullBudgetObject from './9-getFullBudget.js';\n\nconst fullBudget = getFullBudgetObject(20, 50, 10);\n\nconsole.log(fullBudget.getIncomeInDollars(fullBudget.income));\nconsole.log(fullBudget.getIncomeInEuros(fullBudget.income));\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 9-main.js \n$20\n20 euros\nbob@dylan:~$\n```\"><pre class=\"notranslate\"><code>```\nexport default function getFullBudgetObject(income, gdp, capita) {\n  const budget = getBudgetObject(income, gdp, capita);\n  const fullBudget = {\n    ...budget,\n    getIncomeInDollars: function (income) {\n      return `$${income}`;\n    },\n    getIncomeInEuros: function (income) {\n      return `${income} euros`;\n    },\n  };\n\n  return fullBudget;\n}\nExecution:\n\nbob@dylan:~$ cat 9-main.js\nimport getFullBudgetObject from './9-getFullBudget.js';\n\nconst fullBudget = getFullBudgetObject(20, 50, 10);\n\nconsole.log(fullBudget.getIncomeInDollars(fullBudget.income));\nconsole.log(fullBudget.getIncomeInEuros(fullBudget.income));\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 9-main.js \n$20\n20 euros\nbob@dylan:~$\n```\n</code></pre></div>\n<ul dir=\"auto\">\n<li><a href=\"/Dr-MarcusI/alx-backend-javascript/blob/master/0x00-ES6_basic/10-loops.js\">10-loops.js</a>:Rewrite the function appendToEachArrayValue to use ES6’s for...of operator. And don’t forget that var is not ES6-friendly.</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```\nexport default function appendToEachArrayValue(array, appendString) {\n  for (var idx in array) {\n    var value = array[idx];\n    array[idx] = appendString + value;\n  }\n\n  return array;\n}\nExecution:\n\nbob@dylan:~$ cat 10-main.js\nimport appendToEachArrayValue from './10-loops.js';\n\nconsole.log(appendToEachArrayValue(['appended', 'fixed', 'displayed'], 'correctly-'));\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 10-main.js \n[ 'correctly-appended', 'correctly-fixed', 'correctly-displayed' ]\nbob@dylan:~$\n```\"><pre class=\"notranslate\"><code>```\nexport default function appendToEachArrayValue(array, appendString) {\n  for (var idx in array) {\n    var value = array[idx];\n    array[idx] = appendString + value;\n  }\n\n  return array;\n}\nExecution:\n\nbob@dylan:~$ cat 10-main.js\nimport appendToEachArrayValue from './10-loops.js';\n\nconsole.log(appendToEachArrayValue(['appended', 'fixed', 'displayed'], 'correctly-'));\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 10-main.js \n[ 'correctly-appended', 'correctly-fixed', 'correctly-displayed' ]\nbob@dylan:~$\n```\n</code></pre></div>\n<ul dir=\"auto\">\n<li><a href=\"/Dr-MarcusI/alx-backend-javascript/blob/master/0x00-ES6_basic/11-createEmployeesObject.js\">11-createEmployeesObject.js</a>:\nWrite a function named createEmployeesObject that will receive two arguments:</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```\ndepartmentName (String)\nemployees (Array of Strings)\nexport default function createEmployeesObject(departmentName, employees) {\n\n}\nThe function should return an object with the following format:\n\n{\n     $departmentName: [\n          $employees,\n     ],\n}\nExecution:\n\nbob@dylan:~$ cat 11-main.js\nimport createEmployeesObject from './11-createEmployeesObject.js';\n\nconsole.log(createEmployeesObject(&quot;Software&quot;, [ &quot;Bob&quot;, &quot;Sylvie&quot; ]));\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 11-main.js \n{ Software: [ 'Bob', 'Sylvie' ] }\nbob@dylan:~$\n```\"><pre class=\"notranslate\"><code>```\ndepartmentName (String)\nemployees (Array of Strings)\nexport default function createEmployeesObject(departmentName, employees) {\n\n}\nThe function should return an object with the following format:\n\n{\n     $departmentName: [\n          $employees,\n     ],\n}\nExecution:\n\nbob@dylan:~$ cat 11-main.js\nimport createEmployeesObject from './11-createEmployeesObject.js';\n\nconsole.log(createEmployeesObject(\"Software\", [ \"Bob\", \"Sylvie\" ]));\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 11-main.js \n{ Software: [ 'Bob', 'Sylvie' ] }\nbob@dylan:~$\n```\n</code></pre></div>\n<ul dir=\"auto\">\n<li><a href=\"/Dr-MarcusI/alx-backend-javascript/blob/master/0x00-ES6_basic/12-createReportObject.js\">12-createReportObject.js</a>:Write a function named createReportObject whose parameter, employeesList, is the return value of the previous function createEmployeesObject.</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```\nexport default function createReportObject(employeesList) {\n\n}\ncreateReportObject should return an object containing the key allEmployees and a method property called getNumberOfDepartments.\n\nallEmployees is a key that maps to an object containing the department name and a list of all the employees in that department. If you’re having trouble, use the spread syntax.\n\nThe method property receives employeesList and returns the number of departments. I would suggest suggest thinking back to the ES6 method property syntax.\n\n{\n  allEmployees: {\n     engineering: [\n          'John Doe',\n          'Guillaume Salva',\n     ],\n  },\n};\nExecution:\n\nbob@dylan:~$ cat 12-main.js\nimport createEmployeesObject from './11-createEmployeesObject.js';\nimport createReportObject from './12-createReportObject.js';\n\nconst employees = {\n    ...createEmployeesObject('engineering', ['Bob', 'Jane']),\n    ...createEmployeesObject('marketing', ['Sylvie'])\n};      \n\nconst report = createReportObject(employees);\nconsole.log(report.allEmployees);\nconsole.log(report.getNumberOfDepartments(report.allEmployees));\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 12-main.js \n{ engineering: [ 'Bob', 'Jane' ], marketing: [ 'Sylvie' ] }\n2\nbob@dylan:~$\n```\"><pre class=\"notranslate\"><code>```\nexport default function createReportObject(employeesList) {\n\n}\ncreateReportObject should return an object containing the key allEmployees and a method property called getNumberOfDepartments.\n\nallEmployees is a key that maps to an object containing the department name and a list of all the employees in that department. If you’re having trouble, use the spread syntax.\n\nThe method property receives employeesList and returns the number of departments. I would suggest suggest thinking back to the ES6 method property syntax.\n\n{\n  allEmployees: {\n     engineering: [\n          'John Doe',\n          'Guillaume Salva',\n     ],\n  },\n};\nExecution:\n\nbob@dylan:~$ cat 12-main.js\nimport createEmployeesObject from './11-createEmployeesObject.js';\nimport createReportObject from './12-createReportObject.js';\n\nconst employees = {\n    ...createEmployeesObject('engineering', ['Bob', 'Jane']),\n    ...createEmployeesObject('marketing', ['Sylvie'])\n};      \n\nconst report = createReportObject(employees);\nconsole.log(report.allEmployees);\nconsole.log(report.getNumberOfDepartments(report.allEmployees));\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 12-main.js \n{ engineering: [ 'Bob', 'Jane' ], marketing: [ 'Sylvie' ] }\n2\nbob@dylan:~$\n```\n</code></pre></div>\n<ul dir=\"auto\">\n<li><a href=\"/Dr-MarcusI/alx-backend-javascript/blob/master/0x00-ES6_basic/100-createIteratorObject.js\">100-createIteratorObject.js</a>:\nWrite a function named createIteratorObject, that will take into argument a report Object created with the previous function createReportObject.</li>\n</ul>\n<p dir=\"auto\">This function will return an iterator to go through every employee in every department.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```\nexport default function createIteratorObject(report) {\n\n}\nExecution:\n\nbob@dylan:~$ cat 100-main.js\nimport createIteratorObject from &quot;./100-createIteratorObject.js&quot;;\n\nimport createEmployeesObject from './11-createEmployeesObject.js';\nimport createReportObject from './12-createReportObject.js';\n\nconst employees = {\n    ...createEmployeesObject('engineering', ['Bob', 'Jane']),\n    ...createEmployeesObject('marketing', ['Sylvie'])\n};\n\nconst report = createReportObject(employees);\n\nconst reportWithIterator = createIteratorObject(report);\n\nfor (const item of reportWithIterator) {\n    console.log(item);\n}\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 100-main.js \nBob\nJane\nSylvie\nbob@dylan:~$\n```\"><pre class=\"notranslate\"><code>```\nexport default function createIteratorObject(report) {\n\n}\nExecution:\n\nbob@dylan:~$ cat 100-main.js\nimport createIteratorObject from \"./100-createIteratorObject.js\";\n\nimport createEmployeesObject from './11-createEmployeesObject.js';\nimport createReportObject from './12-createReportObject.js';\n\nconst employees = {\n    ...createEmployeesObject('engineering', ['Bob', 'Jane']),\n    ...createEmployeesObject('marketing', ['Sylvie'])\n};\n\nconst report = createReportObject(employees);\n\nconst reportWithIterator = createIteratorObject(report);\n\nfor (const item of reportWithIterator) {\n    console.log(item);\n}\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 100-main.js \nBob\nJane\nSylvie\nbob@dylan:~$\n```\n</code></pre></div>\n<ul dir=\"auto\">\n<li><a href=\"/Dr-MarcusI/alx-backend-javascript/blob/master/0x00-ES6_basic/101-iterateThroughObject.js\">101-iterateThroughObject.js</a>:Finally, write a function named iterateThroughObject. The function’s parameter reportWithIterator is the return value from createIteratorObject.</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```\n export default function iterateThroughObject(reportWithIterator) {\n\n }\nIt should return every employee name in a string, separated by |\n\n{\n  allEmployees: {\n     engineering: [\n          'John Doe',\n          'Guillaume Salva',\n     ],\n  },\n  ...\n};\nShould return John Doe | Guillaume Salva\n\nReminder - the functions will be imported by the test suite.\n\nFull example:\n\n&gt; employees = {\n      ...createEmployeesObject('engineering', engineering),\n      ...createEmployeesObject('design', design),\n    };\n&gt;\n&gt; const report = createReportObject(employees);\n&gt; const reportWithIterator = createIteratorObject(report);\n&gt; iterateThroughObject(reportWithIterator)\n'John Doe | Guillaume Salva | Kanye East | Jay Li'\n&gt; \nExecution:\n\nbob@dylan:~$ cat 101-main.js\nimport createEmployeesObject from &quot;./11-createEmployeesObject.js&quot;;\nimport createReportObject from './12-createReportObject.js';\nimport createIteratorObject from './100-createIteratorObject.js';\nimport iterateThroughObject from './101-iterateThroughObject.js';\n\n\nconst employees = {\n    ...createEmployeesObject('engineering', ['Bob', 'Jane']),\n    ...createEmployeesObject('marketing', ['Sylvie'])\n};\n\nconst report = createReportObject(employees);\nconst reportWithIterator = createIteratorObject(report);\n\nconsole.log(iterateThroughObject(reportWithIterator));\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 101-main.js \nBob | Jane | Sylvie\nbob@dylan:~$\n```\"><pre class=\"notranslate\"><code>```\n export default function iterateThroughObject(reportWithIterator) {\n\n }\nIt should return every employee name in a string, separated by |\n\n{\n  allEmployees: {\n     engineering: [\n          'John Doe',\n          'Guillaume Salva',\n     ],\n  },\n  ...\n};\nShould return John Doe | Guillaume Salva\n\nReminder - the functions will be imported by the test suite.\n\nFull example:\n\n&gt; employees = {\n      ...createEmployeesObject('engineering', engineering),\n      ...createEmployeesObject('design', design),\n    };\n&gt;\n&gt; const report = createReportObject(employees);\n&gt; const reportWithIterator = createIteratorObject(report);\n&gt; iterateThroughObject(reportWithIterator)\n'John Doe | Guillaume Salva | Kanye East | Jay Li'\n&gt; \nExecution:\n\nbob@dylan:~$ cat 101-main.js\nimport createEmployeesObject from \"./11-createEmployeesObject.js\";\nimport createReportObject from './12-createReportObject.js';\nimport createIteratorObject from './100-createIteratorObject.js';\nimport iterateThroughObject from './101-iterateThroughObject.js';\n\n\nconst employees = {\n    ...createEmployeesObject('engineering', ['Bob', 'Jane']),\n    ...createEmployeesObject('marketing', ['Sylvie'])\n};\n\nconst report = createReportObject(employees);\nconst reportWithIterator = createIteratorObject(report);\n\nconsole.log(iterateThroughObject(reportWithIterator));\n\nbob@dylan:~$\nbob@dylan:~$ npm run dev 101-main.js \nBob | Jane | Sylvie\nbob@dylan:~$\n```\n</code></pre></div>\n<div class=\"markdown-heading\" dir=\"auto\"><h3 tabindex=\"-1\" class=\"heading-element\" dir=\"auto\">Authors ©</h3><a id=\"user-content-authors-\" class=\"anchor\" aria-label=\"Permalink: Authors ©\" href=\"#authors-\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z\"></path></svg></a></div>\n<ul dir=\"auto\">\n<li>Dr Marcus Imagwe</li>\n</ul>\n</article>","errorMessage":null,"headerInfo":{"toc":[{"level":1,"text":"0x00. ES6 Basics","anchor":"0x00-es6-basics","htmlText":"0x00. ES6 Basics"},{"level":2,"text":"Tasks","anchor":"tasks","htmlText":"Tasks"},{"level":3,"text":"Authors ©","anchor":"authors-","htmlText":"Authors ©"}],"siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2FDr-MarcusI%2Falx-backend-javascript%2Ftree%2Fmaster%2F0x00-ES6_basic"}},"totalCount":17,"showBranchInfobar":false},"fileTree":{"":{"items":[{"name":"0x00-ES6_basic","path":"0x00-ES6_basic","contentType":"directory"},{"name":"0x01-ES6_promise","path":"0x01-ES6_promise","contentType":"directory"},{"name":"0x02-ES6_classes","path":"0x02-ES6_classes","contentType":"directory"},{"name":"0x03-ES6_data_manipulation","path":"0x03-ES6_data_manipulation","contentType":"directory"},{"name":"0x04-TypeScript","path":"0x04-TypeScript","contentType":"directory"},{"name":"0x05-Node_JS_basic","path":"0x05-Node_JS_basic","contentType":"directory"},{"name":"0x06-unittests_in_js","path":"0x06-unittests_in_js","contentType":"directory"},{"name":"README.md","path":"README.md","contentType":"file"}],"totalCount":8}},"fileTreeProcessingTime":7.229140999999999,"foldersToFetch":[],"treeExpanded":true,"symbolsExpanded":false,"csrf_tokens":{"/Dr-MarcusI/alx-backend-javascript/branches":{"post":"_MhHS84WTQgkS7t8Nb5q4jJejYbIXLIC2cxsw6gHrGdQL0yYgBo7DU2EHrwnqhVUdJPMVBFe5b9n527T3yMUsA"},"/Dr-MarcusI/alx-backend-javascript/branches/fetch_and_merge/master":{"post":"V5E-OcRlfKBaFLXYKqup4YYAIRR2cMUOREjp04O93VfAmGlqbaBqNXOc7suyjvU_MxT0746f5_AKV9odNwFa9A"},"/Dr-MarcusI/alx-backend-javascript/branches/fetch_and_merge/master?discard_changes=true":{"post":"JVty6DH5TRWKoxV67W6fqWfOukea_yMf5sQyctaSGhuyUiW7mDxbgKMrTml1S8N30tpvvGIQAeGo2wG8Yi6duA"}}},"title":"alx-backend-javascript/0x00-ES6_basic at master · Dr-MarcusI/alx-backend-javascript"}